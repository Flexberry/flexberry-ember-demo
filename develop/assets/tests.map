{"version":3,"sources":["ember-app/tests/adapters/application-offline.jscs-test.js","ember-app/tests/adapters/application-offline.jshint.js","ember-app/tests/adapters/application.jscs-test.js","ember-app/tests/adapters/application.jshint.js","ember-app/tests/app.jscs-test.js","ember-app/tests/app.jshint.js","ember-app/tests/components/layers/geojson-layer.jscs-test.js","ember-app/tests/components/layers/geojson-layer.jshint.js","ember-app/tests/components/legends/geojson-legend.jscs-test.js","ember-app/tests/components/legends/geojson-legend.jshint.js","ember-app/tests/components/map-tools/draw-suggestion.jscs-test.js","ember-app/tests/components/map-tools/draw-suggestion.jshint.js","ember-app/tests/controllers/application.jscs-test.js","ember-app/tests/controllers/application.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-e.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-e.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-e/new.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-e/new.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-l.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-application-user-l.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-localization-e.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-localization-e.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-localization-e/new.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-localization-e/new.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-localization-l.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-localization-l.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-e.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-e.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-e/new.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-e/new.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-l.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-l.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e/new.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e/new.jshint.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-l.jscs-test.js","ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-l.jshint.js","ember-app/tests/controllers/map.jscs-test.js","ember-app/tests/controllers/map.jshint.js","ember-app/tests/controllers/sitemap-node.jscs-test.js","ember-app/tests/controllers/sitemap-node.jshint.js","ember-app/tests/enums/flexberry-ember-demo-gender.jscs-test.js","ember-app/tests/enums/flexberry-ember-demo-gender.jshint.js","ember-app/tests/enums/flexberry-ember-demo-vote-type.jscs-test.js","ember-app/tests/enums/flexberry-ember-demo-vote-type.jshint.js","ember-app/tests/helpers/destroy-app.js","ember-app/tests/helpers/destroy-app.jscs-test.js","ember-app/tests/helpers/destroy-app.jshint.js","ember-app/tests/helpers/ember-i18n/test-helpers.js","ember-app/tests/helpers/module-for-acceptance.js","ember-app/tests/helpers/module-for-acceptance.jscs-test.js","ember-app/tests/helpers/module-for-acceptance.jshint.js","ember-app/tests/helpers/resolver.js","ember-app/tests/helpers/resolver.jscs-test.js","ember-app/tests/helpers/resolver.jshint.js","ember-app/tests/helpers/start-app.js","ember-app/tests/helpers/start-app.jscs-test.js","ember-app/tests/helpers/start-app.jshint.js","ember-app/tests/helpers/validate-properties.js","ember-app/tests/layers/geojson.jscs-test.js","ember-app/tests/layers/geojson.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-e.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-e.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-l.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-l.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-e.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-e.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-l.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-l.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-e.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-e.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-l.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-l.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-e.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-e.jshint.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-l.jscs-test.js","ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-l.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-comment.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-localization.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/locales/en/models/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/locales/en/models/flexberry-ember-demo-vote.jshint.js","ember-app/tests/locales/en/translations.jscs-test.js","ember-app/tests/locales/en/translations.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-e.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-e.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-l.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-l.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-e.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-e.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-l.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-l.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-e.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-e.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-l.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-l.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-e.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-e.jshint.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-l.jscs-test.js","ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-l.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-comment.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-localization.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/locales/ru/models/flexberry-ember-demo-vote.jshint.js","ember-app/tests/locales/ru/translations.jscs-test.js","ember-app/tests/locales/ru/translations.jshint.js","ember-app/tests/map-tools/draw-suggestion-marker.jscs-test.js","ember-app/tests/map-tools/draw-suggestion-marker.jshint.js","ember-app/tests/map-tools/draw-suggestion-polygon.jscs-test.js","ember-app/tests/map-tools/draw-suggestion-polygon.jshint.js","ember-app/tests/map-tools/draw-suggestion-polyline.jscs-test.js","ember-app/tests/map-tools/draw-suggestion-polyline.jshint.js","ember-app/tests/map-tools/draw-suggestion-rectangle.jscs-test.js","ember-app/tests/map-tools/draw-suggestion-rectangle.jshint.js","ember-app/tests/map-tools/draw-suggestion.jscs-test.js","ember-app/tests/map-tools/draw-suggestion.jshint.js","ember-app/tests/mixins/redirect-to-login-mixin.jscs-test.js","ember-app/tests/mixins/redirect-to-login-mixin.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localization.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-vote.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.jshint.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote.jshint.js","ember-app/tests/models/custom-inflector-rules.jscs-test.js","ember-app/tests/models/custom-inflector-rules.jshint.js","ember-app/tests/models/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/models/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/models/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-comment.jshint.js","ember-app/tests/models/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-localization.jshint.js","ember-app/tests/models/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/models/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/models/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/models/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/models/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/models/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/models/flexberry-ember-demo-vote.jshint.js","ember-app/tests/resolver.jscs-test.js","ember-app/tests/resolver.jshint.js","ember-app/tests/router.jscs-test.js","ember-app/tests/router.jshint.js","ember-app/tests/routes/application.jscs-test.js","ember-app/tests/routes/application.jshint.js","ember-app/tests/routes/flexberry-ember-demo-application-user-e.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-application-user-e.jshint.js","ember-app/tests/routes/flexberry-ember-demo-application-user-e/new.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-application-user-e/new.jshint.js","ember-app/tests/routes/flexberry-ember-demo-application-user-l.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-application-user-l.jshint.js","ember-app/tests/routes/flexberry-ember-demo-localization-e.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-localization-e.jshint.js","ember-app/tests/routes/flexberry-ember-demo-localization-e/new.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-localization-e/new.jshint.js","ember-app/tests/routes/flexberry-ember-demo-localization-l.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-localization-l.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-e.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-e.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-e/new.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-e/new.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-l.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-l.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e/new.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e/new.jshint.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-l.jscs-test.js","ember-app/tests/routes/flexberry-ember-demo-suggestion-type-l.jshint.js","ember-app/tests/routes/index.jscs-test.js","ember-app/tests/routes/index.jshint.js","ember-app/tests/routes/login.jscs-test.js","ember-app/tests/routes/login.jshint.js","ember-app/tests/routes/map.jscs-test.js","ember-app/tests/routes/map.jshint.js","ember-app/tests/serializers/application-offline.jscs-test.js","ember-app/tests/serializers/application-offline.jshint.js","ember-app/tests/serializers/application.jscs-test.js","ember-app/tests/serializers/application.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-application-user-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-application-user-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-application-user.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-application-user.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-comment-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-comment-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-comment-vote-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-comment-vote-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-comment-vote.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-comment-vote.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-comment.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-comment.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-localization-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-localization-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-localization.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-localization.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-offline-user-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-offline-user-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-offline-user.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-offline-user.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-file-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-file-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-file.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-file.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-type-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-type-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-type.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion-type.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-suggestion.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-vote-offline.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-vote-offline.jshint.js","ember-app/tests/serializers/flexberry-ember-demo-vote.jscs-test.js","ember-app/tests/serializers/flexberry-ember-demo-vote.jshint.js","ember-app/tests/services/store.jscs-test.js","ember-app/tests/services/store.jshint.js","ember-app/tests/test-helper.js","ember-app/tests/test-helper.jscs-test.js","ember-app/tests/test-helper.jshint.js","ember-app/tests/transforms/flexberry-ember-demo-gender.jscs-test.js","ember-app/tests/transforms/flexberry-ember-demo-gender.jshint.js","ember-app/tests/transforms/flexberry-ember-demo-vote-type.jscs-test.js","ember-app/tests/transforms/flexberry-ember-demo-vote-type.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test.jshint.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test.jscs-test.js","ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-application-user-test.js","ember-app/tests/unit/models/flexberry-ember-demo-application-user-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-application-user-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-test.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-localization-test.js","ember-app/tests/unit/models/flexberry-ember-demo-localization-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-localization-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test.js","ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test.js","ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test.jshint.js","ember-app/tests/unit/models/flexberry-ember-demo-vote-test.js","ember-app/tests/unit/models/flexberry-ember-demo-vote-test.jscs-test.js","ember-app/tests/unit/models/flexberry-ember-demo-vote-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test.jshint.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test.jscs-test.js","ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test.jshint.js","ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test.jscs-test.js","ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test.jshint.js","ember-app/tests/views/application.jscs-test.js","ember-app/tests/views/application.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('ember-app/tests/adapters/application-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application-offline.js should pass jscs', function () {\n    ok(true, 'adapters/application-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/adapters/application-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/adapters/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - adapters');\n  test('adapters/application.js should pass jscs', function () {\n    ok(true, 'adapters/application.js should pass jscs.');\n  });\n});","define('ember-app/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('ember-app/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('ember-app/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('ember-app/tests/components/layers/geojson-layer.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components/layers');\n  test('components/layers/geojson-layer.js should pass jscs', function () {\n    ok(true, 'components/layers/geojson-layer.js should pass jscs.');\n  });\n});","define('ember-app/tests/components/layers/geojson-layer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/layers/geojson-layer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/layers/geojson-layer.js should pass jshint.');\n  });\n});","define('ember-app/tests/components/legends/geojson-legend.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components/legends');\n  test('components/legends/geojson-legend.js should pass jscs', function () {\n    ok(true, 'components/legends/geojson-legend.js should pass jscs.');\n  });\n});","define('ember-app/tests/components/legends/geojson-legend.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/legends/geojson-legend.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/legends/geojson-legend.js should pass jshint.');\n  });\n});","define('ember-app/tests/components/map-tools/draw-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components/map-tools');\n  test('components/map-tools/draw-suggestion.js should pass jscs', function () {\n    ok(true, 'components/map-tools/draw-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/components/map-tools/draw-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/map-tools/draw-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/map-tools/draw-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/application.js should pass jscs', function () {\n    ok(true, 'controllers/application.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-application-user-e.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-application-user-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-application-user-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-application-user-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/flexberry-ember-demo-application-user-e');\n  test('controllers/flexberry-ember-demo-application-user-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-application-user-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-application-user-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-application-user-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-application-user-l.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-application-user-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-application-user-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-application-user-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-application-user-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-localization-e.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-localization-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-localization-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-localization-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/flexberry-ember-demo-localization-e');\n  test('controllers/flexberry-ember-demo-localization-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-localization-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-localization-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-localization-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-localization-l.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-localization-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-localization-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-localization-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-localization-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-suggestion-e.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/flexberry-ember-demo-suggestion-e');\n  test('controllers/flexberry-ember-demo-suggestion-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-suggestion-l.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-suggestion-type-e.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-type-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-type-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-type-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers/flexberry-ember-demo-suggestion-type-e');\n  test('controllers/flexberry-ember-demo-suggestion-type-e/new.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-type-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-type-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-type-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/flexberry-ember-demo-suggestion-type-l.js should pass jscs', function () {\n    ok(true, 'controllers/flexberry-ember-demo-suggestion-type-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/flexberry-ember-demo-suggestion-type-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/flexberry-ember-demo-suggestion-type-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flexberry-ember-demo-suggestion-type-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/map.js should pass jscs', function () {\n    ok(true, 'controllers/map.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/map.js should pass jshint.');\n  });\n});","define('ember-app/tests/controllers/sitemap-node.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - controllers');\n  test('controllers/sitemap-node.js should pass jscs', function () {\n    ok(true, 'controllers/sitemap-node.js should pass jscs.');\n  });\n});","define('ember-app/tests/controllers/sitemap-node.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/sitemap-node.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/sitemap-node.js should pass jshint.');\n  });\n});","define('ember-app/tests/enums/flexberry-ember-demo-gender.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - enums');\n  test('enums/flexberry-ember-demo-gender.js should pass jscs', function () {\n    ok(true, 'enums/flexberry-ember-demo-gender.js should pass jscs.');\n  });\n});","define('ember-app/tests/enums/flexberry-ember-demo-gender.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - enums/flexberry-ember-demo-gender.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'enums/flexberry-ember-demo-gender.js should pass jshint.');\n  });\n});","define('ember-app/tests/enums/flexberry-ember-demo-vote-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - enums');\n  test('enums/flexberry-ember-demo-vote-type.js should pass jscs', function () {\n    ok(true, 'enums/flexberry-ember-demo-vote-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/enums/flexberry-ember-demo-vote-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - enums/flexberry-ember-demo-vote-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'enums/flexberry-ember-demo-vote-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('ember-app/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('ember-app/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('ember-app/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('ember-app/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember-app/tests/helpers/start-app', 'ember-app/tests/helpers/destroy-app'], function (exports, _qunit, _emberAppTestsHelpersStartApp, _emberAppTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _emberAppTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _emberAppTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('ember-app/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('ember-app/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('ember-app/tests/helpers/resolver', ['exports', 'ember-app/resolver', 'ember-app/config/environment'], function (exports, _emberAppResolver, _emberAppConfigEnvironment) {\n\n  var resolver = _emberAppResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _emberAppConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _emberAppConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('ember-app/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('ember-app/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('ember-app/tests/helpers/start-app', ['exports', 'ember', 'ember-app/app', 'ember-app/config/environment'], function (exports, _ember, _emberAppApp, _emberAppConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _emberAppConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _emberAppApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('ember-app/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('ember-app/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('ember-app/tests/helpers/validate-properties', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n  exports.testValidPropertyValues = testValidPropertyValues;\n  exports.testInvalidPropertyValues = testInvalidPropertyValues;\n\n  var run = _ember['default'].run;\n\n  function validateValues(object, propertyName, values, isTestForValid) {\n    var promise = null;\n    var validatedValues = [];\n\n    values.forEach(function (value) {\n      function handleValidation(errors) {\n        var hasErrors = object.get('errors.' + propertyName + '.firstObject');\n        if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n          validatedValues.push(value);\n        }\n      }\n\n      run(object, 'set', propertyName, value);\n\n      var objectPromise = null;\n      run(function () {\n        objectPromise = object.validate().then(handleValidation, handleValidation);\n      });\n\n      // Since we are setting the values in a different run loop as we are validating them,\n      // we need to chain the promises so that they run sequentially. The wrong value will\n      // be validated if the promises execute concurrently\n      promise = promise ? promise.then(objectPromise) : objectPromise;\n    });\n\n    return promise.then(function () {\n      return validatedValues;\n    });\n  }\n\n  function testPropertyValues(propertyName, values, isTestForValid, context) {\n    var validOrInvalid = isTestForValid ? 'Valid' : 'Invalid';\n    var testName = validOrInvalid + ' ' + propertyName;\n\n    (0, _emberQunit.test)(testName, function (assert) {\n      var object = this.subject();\n\n      if (context && typeof context === 'function') {\n        context(object);\n      }\n\n      // Use QUnit.dump.parse so null and undefined can be printed as literal 'null' and\n      // 'undefined' strings in the assert message.\n      var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, '').replace(/,/g, ', ');\n      var assertMessage = 'Expected ' + propertyName + ' to have ' + validOrInvalid.toLowerCase() + ' values: ' + valuesString;\n\n      return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n        assert.deepEqual(validatedValues, values, assertMessage);\n      });\n    });\n  }\n\n  function testValidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, true, context);\n  }\n\n  function testInvalidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, false, context);\n  }\n});","define('ember-app/tests/layers/geojson.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - layers');\n  test('layers/geojson.js should pass jscs', function () {\n    ok(true, 'layers/geojson.js should pass jscs.');\n  });\n});","define('ember-app/tests/layers/geojson.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - layers/geojson.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'layers/geojson.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-application-user-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-application-user-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-application-user-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-application-user-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-application-user-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-application-user-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-application-user-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-application-user-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-application-user-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-localization-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-localization-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-localization-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-localization-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-localization-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-localization-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-localization-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-localization-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-localization-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-suggestion-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-suggestion-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-suggestion-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-suggestion-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-suggestion-type-e.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-type-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-suggestion-type-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-type-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/forms');\n  test('locales/en/forms/flexberry-ember-demo-suggestion-type-l.js should pass jscs', function () {\n    ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-type-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/forms/flexberry-ember-demo-suggestion-type-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/forms/flexberry-ember-demo-suggestion-type-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/forms/flexberry-ember-demo-suggestion-type-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en/models');\n  test('locales/en/models/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'locales/en/models/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/models/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/models/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/models/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/en/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/en');\n  test('locales/en/translations.js should pass jscs', function () {\n    ok(true, 'locales/en/translations.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/en/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/en/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/en/translations.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-application-user-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-application-user-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-application-user-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-application-user-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-application-user-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-application-user-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-application-user-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-application-user-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-application-user-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-localization-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-localization-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-localization-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-localization-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-localization-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-localization-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-localization-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-localization-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-localization-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-suggestion-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-suggestion-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-suggestion-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-suggestion-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-suggestion-type-e.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-type-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-suggestion-type-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-type-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/forms');\n  test('locales/ru/forms/flexberry-ember-demo-suggestion-type-l.js should pass jscs', function () {\n    ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-type-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/forms/flexberry-ember-demo-suggestion-type-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/forms/flexberry-ember-demo-suggestion-type-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/forms/flexberry-ember-demo-suggestion-type-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru/models');\n  test('locales/ru/models/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'locales/ru/models/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/models/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/models/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/models/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/locales/ru/translations.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - locales/ru');\n  test('locales/ru/translations.js should pass jscs', function () {\n    ok(true, 'locales/ru/translations.js should pass jscs.');\n  });\n});","define('ember-app/tests/locales/ru/translations.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - locales/ru/translations.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'locales/ru/translations.js should pass jshint.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-marker.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - map-tools');\n  test('map-tools/draw-suggestion-marker.js should pass jscs', function () {\n    ok(true, 'map-tools/draw-suggestion-marker.js should pass jscs.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-marker.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-tools/draw-suggestion-marker.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-tools/draw-suggestion-marker.js should pass jshint.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-polygon.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - map-tools');\n  test('map-tools/draw-suggestion-polygon.js should pass jscs', function () {\n    ok(true, 'map-tools/draw-suggestion-polygon.js should pass jscs.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-polygon.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-tools/draw-suggestion-polygon.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-tools/draw-suggestion-polygon.js should pass jshint.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-polyline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - map-tools');\n  test('map-tools/draw-suggestion-polyline.js should pass jscs', function () {\n    ok(true, 'map-tools/draw-suggestion-polyline.js should pass jscs.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-polyline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-tools/draw-suggestion-polyline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-tools/draw-suggestion-polyline.js should pass jshint.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-rectangle.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - map-tools');\n  test('map-tools/draw-suggestion-rectangle.js should pass jscs', function () {\n    ok(true, 'map-tools/draw-suggestion-rectangle.js should pass jscs.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion-rectangle.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-tools/draw-suggestion-rectangle.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-tools/draw-suggestion-rectangle.js should pass jshint.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - map-tools');\n  test('map-tools/draw-suggestion.js should pass jscs', function () {\n    ok(true, 'map-tools/draw-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/map-tools/draw-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - map-tools/draw-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'map-tools/draw-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/redirect-to-login-mixin.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins');\n  test('mixins/redirect-to-login-mixin.js should pass jscs', function () {\n    ok(true, 'mixins/redirect-to-login-mixin.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/redirect-to-login-mixin.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/redirect-to-login-mixin.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/redirect-to-login-mixin.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/models');\n  test('mixins/regenerated/models/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/models/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/models/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/models/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/models/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-application-user-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-vote-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localization-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-offline-user-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-vote-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - mixins/regenerated/serializers');\n  test('mixins/regenerated/serializers/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/mixins/regenerated/serializers/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins/regenerated/serializers/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/regenerated/serializers/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/custom-inflector-rules.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/custom-inflector-rules.js should pass jscs', function () {\n    ok(true, 'models/custom-inflector-rules.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/custom-inflector-rules.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/custom-inflector-rules.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/custom-inflector-rules.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - models');\n  test('models/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'models/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/models/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('ember-app/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('ember-app/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('ember-app/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/application.js should pass jscs', function () {\n    ok(true, 'routes/application.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-application-user-e.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-application-user-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-application-user-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-application-user-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/flexberry-ember-demo-application-user-e');\n  test('routes/flexberry-ember-demo-application-user-e/new.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-application-user-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-application-user-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-application-user-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-application-user-l.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-application-user-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-application-user-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-application-user-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-application-user-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-localization-e.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-localization-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-localization-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-localization-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/flexberry-ember-demo-localization-e');\n  test('routes/flexberry-ember-demo-localization-e/new.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-localization-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-localization-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-localization-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-localization-l.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-localization-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-localization-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-localization-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-localization-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-suggestion-e.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/flexberry-ember-demo-suggestion-e');\n  test('routes/flexberry-ember-demo-suggestion-e/new.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-suggestion-l.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-suggestion-type-e.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-type-e.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-type-e.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-type-e.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e/new.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes/flexberry-ember-demo-suggestion-type-e');\n  test('routes/flexberry-ember-demo-suggestion-type-e/new.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-type-e/new.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-e/new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-type-e/new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-type-e/new.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-l.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/flexberry-ember-demo-suggestion-type-l.js should pass jscs', function () {\n    ok(true, 'routes/flexberry-ember-demo-suggestion-type-l.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/flexberry-ember-demo-suggestion-type-l.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/flexberry-ember-demo-suggestion-type-l.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/flexberry-ember-demo-suggestion-type-l.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/index.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/index.js should pass jscs', function () {\n    ok(true, 'routes/index.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/login.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/login.js should pass jscs', function () {\n    ok(true, 'routes/login.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass jshint.');\n  });\n});","define('ember-app/tests/routes/map.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - routes');\n  test('routes/map.js should pass jscs', function () {\n    ok(true, 'routes/map.js should pass jscs.');\n  });\n});","define('ember-app/tests/routes/map.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/map.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/map.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/application-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application-offline.js should pass jscs', function () {\n    ok(true, 'serializers/application-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/application-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/application.js should pass jscs', function () {\n    ok(true, 'serializers/application.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-application-user-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-application-user-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-application-user-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-application-user-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-application-user-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-application-user-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-application-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-application-user.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-application-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-application-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-application-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-application-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-comment-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-comment-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-comment-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-comment-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-vote-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-comment-vote-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-comment-vote-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-vote-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-comment-vote-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-comment-vote-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-comment-vote.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-comment-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-comment-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-comment-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-comment.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-comment.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-comment.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-comment.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-comment.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localization-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-localization-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-localization-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localization-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-localization-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-localization-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localization.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-localization.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-localization.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-localization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-localization.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-localized-suggestion-type-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-localized-suggestion-type-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-localized-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-localized-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-localized-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-offline-user-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-offline-user-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-offline-user-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-offline-user-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-offline-user-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-offline-user-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-offline-user.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-offline-user.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-offline-user.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-offline-user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-offline-user.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-offline-user.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-file-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-file-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion-file-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion-file-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-file.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion-file.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion-file.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-file.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion-file.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion-file.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-type-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-type-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion-type-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion-type-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion-type.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-suggestion.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-suggestion.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-suggestion.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-suggestion.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-suggestion.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-vote-offline.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-vote-offline.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-vote-offline.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-vote-offline.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-vote-offline.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-vote-offline.js should pass jshint.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-vote.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - serializers');\n  test('serializers/flexberry-ember-demo-vote.js should pass jscs', function () {\n    ok(true, 'serializers/flexberry-ember-demo-vote.js should pass jscs.');\n  });\n});","define('ember-app/tests/serializers/flexberry-ember-demo-vote.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flexberry-ember-demo-vote.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flexberry-ember-demo-vote.js should pass jshint.');\n  });\n});","define('ember-app/tests/services/store.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - services');\n  test('services/store.js should pass jscs', function () {\n    ok(true, 'services/store.js should pass jscs.');\n  });\n});","define('ember-app/tests/services/store.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/store.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/store.js should pass jshint.');\n  });\n});","define('ember-app/tests/test-helper', ['exports', 'ember-app/tests/helpers/resolver', 'ember-qunit'], function (exports, _emberAppTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_emberAppTestsHelpersResolver['default']);\n});","define('ember-app/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('ember-app/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('ember-app/tests/transforms/flexberry-ember-demo-gender.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - transforms');\n  test('transforms/flexberry-ember-demo-gender.js should pass jscs', function () {\n    ok(true, 'transforms/flexberry-ember-demo-gender.js should pass jscs.');\n  });\n});","define('ember-app/tests/transforms/flexberry-ember-demo-gender.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - transforms/flexberry-ember-demo-gender.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/flexberry-ember-demo-gender.js should pass jshint.');\n  });\n});","define('ember-app/tests/transforms/flexberry-ember-demo-vote-type.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - transforms');\n  test('transforms/flexberry-ember-demo-vote-type.js should pass jscs', function () {\n    ok(true, 'transforms/flexberry-ember-demo-vote-type.js should pass jscs.');\n  });\n});","define('ember-app/tests/transforms/flexberry-ember-demo-vote-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - transforms/flexberry-ember-demo-vote-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transforms/flexberry-ember-demo-vote-type.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-application-user-e', 'Unit | Controller | flexberry ember demo application user e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-application-user-e-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-application-user-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-application-user-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-application-user-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-application-user-l', 'Unit | Controller | flexberry ember demo application user l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-application-user-l-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-application-user-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-application-user-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-application-user-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-application-user-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-localization-e', 'Unit | Controller | flexberry ember demo localization e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-localization-e-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-localization-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-localization-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-localization-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-localization-l', 'Unit | Controller | flexberry ember demo localization l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-localization-l-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-localization-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-localization-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-localization-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-localization-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-suggestion-e', 'Unit | Controller | flexberry ember demo suggestion e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-suggestion-e-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-suggestion-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-suggestion-l', 'Unit | Controller | flexberry ember demo suggestion l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-suggestion-l-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-suggestion-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-suggestion-type-e', 'Unit | Controller | flexberry ember demo suggestion type e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-suggestion-type-e-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-type-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-suggestion-type-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-type-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flexberry-ember-demo-suggestion-type-l', 'Unit | Controller | flexberry ember demo suggestion type l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/controllers');\n  test('unit/controllers/flexberry-ember-demo-suggestion-type-l-test.js should pass jscs', function () {\n    ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-type-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/controllers/flexberry-ember-demo-suggestion-type-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/flexberry-ember-demo-suggestion-type-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/flexberry-ember-demo-suggestion-type-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-application-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-application-user', 'Unit | Model | flexberry-ember-demo-application-user', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-application-user-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-application-user-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-application-user-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-application-user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-application-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-application-user-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-comment', 'Unit | Model | flexberry-ember-demo-comment', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-comment-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-comment-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-comment-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-comment-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-comment-vote', 'Unit | Model | flexberry-ember-demo-comment-vote', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-comment-vote-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-comment-vote-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-comment-vote-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-comment-vote-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-comment-vote-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localization-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-localization', 'Unit | Model | flexberry-ember-demo-localization', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localization-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-localization-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-localization-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localization-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-localization-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-localization-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-localized-suggestion-type', 'Unit | Model | flexberry-ember-demo-localized-suggestion-type', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-localized-suggestion-type-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-localized-suggestion-type-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-localized-suggestion-type-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-localized-suggestion-type-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-localized-suggestion-type-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-offline-user', 'Unit | Model | flexberry-ember-demo-offline-user', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-offline-user-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-offline-user-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-offline-user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-offline-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-offline-user-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion-file', 'Unit | Model | flexberry-ember-demo-suggestion-file', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-suggestion-file-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-suggestion-file-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-file-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-suggestion-file-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-suggestion-file-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion', 'Unit | Model | flexberry-ember-demo-suggestion', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-suggestion-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-suggestion-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-suggestion-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-suggestion-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion-type', 'Unit | Model | flexberry-ember-demo-suggestion-type', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-suggestion-type-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-suggestion-type-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-suggestion-type-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-suggestion-type-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-suggestion-type-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-vote-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-vote', 'Unit | Model | flexberry-ember-demo-vote', {\n    // Specify the other units that are required for this test.\n    needs: ['model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-vote-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/models');\n  test('unit/models/flexberry-ember-demo-vote-test.js should pass jscs', function () {\n    ok(true, 'unit/models/flexberry-ember-demo-vote-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/models/flexberry-ember-demo-vote-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flexberry-ember-demo-vote-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flexberry-ember-demo-vote-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-application-user-e', 'Unit | Route | flexberry ember demo application user e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-application-user-e-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-application-user-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-application-user-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-application-user-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-application-user-l', 'Unit | Route | flexberry ember demo application user l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-application-user-l-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-application-user-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-application-user-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-application-user-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-application-user-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-localization-e', 'Unit | Route | flexberry ember demo localization e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-localization-e-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-localization-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-localization-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-localization-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-localization-l', 'Unit | Route | flexberry ember demo localization l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-localization-l-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-localization-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-localization-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-localization-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-localization-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-suggestion-e', 'Unit | Route | flexberry ember demo suggestion e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-suggestion-e-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-suggestion-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-suggestion-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-suggestion-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-suggestion-l', 'Unit | Route | flexberry ember demo suggestion l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-suggestion-l-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-suggestion-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-suggestion-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-suggestion-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-suggestion-type-e', 'Unit | Route | flexberry ember demo suggestion type e', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-suggestion-type-e-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-suggestion-type-e-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-e-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-suggestion-type-e-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-suggestion-type-e-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flexberry-ember-demo-suggestion-type-l', 'Unit | Route | flexberry ember demo suggestion type l', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/routes');\n  test('unit/routes/flexberry-ember-demo-suggestion-type-l-test.js should pass jscs', function () {\n    ok(true, 'unit/routes/flexberry-ember-demo-suggestion-type-l-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/routes/flexberry-ember-demo-suggestion-type-l-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/flexberry-ember-demo-suggestion-type-l-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/flexberry-ember-demo-suggestion-type-l-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-application-user', 'Unit | Serializer | flexberry-ember-demo-application-user', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-application-user', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-application-user-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-application-user-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-application-user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-application-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-application-user-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-comment', 'Unit | Serializer | flexberry-ember-demo-comment', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-comment', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-comment-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-comment-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-comment-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-comment-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-comment-vote', 'Unit | Serializer | flexberry-ember-demo-comment-vote', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-comment-vote', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-comment-vote-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-comment-vote-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-comment-vote-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-comment-vote-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-comment-vote-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-localization', 'Unit | Serializer | flexberry-ember-demo-localization', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-localization', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-localization-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-localization-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localization-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-localization-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-localization-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-localized-suggestion-type', 'Unit | Serializer | flexberry-ember-demo-localized-suggestion-type', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-localized-suggestion-type', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-localized-suggestion-type-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-offline-user', 'Unit | Serializer | flexberry-ember-demo-offline-user', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-offline-user', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-offline-user-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-offline-user-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-offline-user-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-offline-user-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-offline-user-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion-file', 'Unit | Serializer | flexberry-ember-demo-suggestion-file', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-suggestion-file', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-suggestion-file-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-file-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-file-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-suggestion-file-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-file-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion', 'Unit | Serializer | flexberry-ember-demo-suggestion', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-suggestion', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-offline-user', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-suggestion-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-suggestion-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-suggestion-type', 'Unit | Serializer | flexberry-ember-demo-suggestion-type', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-suggestion-type', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-suggestion-type-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-type-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-suggestion-type-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-suggestion-type-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-suggestion-type-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flexberry-ember-demo-vote', 'Unit | Serializer | flexberry-ember-demo-vote', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flexberry-ember-demo-vote', 'transform:file', 'transform:decimal', 'transform:flexberry-ember-demo-gender', 'transform:flexberry-ember-demo-vote-type', 'model:flexberry-ember-demo-application-user', 'model:flexberry-ember-demo-comment-vote', 'model:flexberry-ember-demo-comment', 'model:flexberry-ember-demo-localization', 'model:flexberry-ember-demo-localized-suggestion-type', 'model:flexberry-ember-demo-suggestion-file', 'model:flexberry-ember-demo-suggestion-type', 'model:flexberry-ember-demo-suggestion', 'model:flexberry-ember-demo-vote']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/serializers');\n  test('unit/serializers/flexberry-ember-demo-vote-test.js should pass jscs', function () {\n    ok(true, 'unit/serializers/flexberry-ember-demo-vote-test.js should pass jscs.');\n  });\n});","define('ember-app/tests/unit/serializers/flexberry-ember-demo-vote-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flexberry-ember-demo-vote-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flexberry-ember-demo-vote-test.js should pass jshint.');\n  });\n});","define('ember-app/tests/views/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - views');\n  test('views/application.js should pass jscs', function () {\n    ok(true, 'views/application.js should pass jscs.');\n  });\n});","define('ember-app/tests/views/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - views/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'views/application.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('ember-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}